"""
Django settings for HFA project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from datetime import datetime as dt
from datetime import date
from pathlib import Path


import boto3
ssm = boto3.client('ssm', region_name='us-east-2')
def _get_ssm_key(name):
  key = ssm.get_parameter(Name=name, WithDecryption=True)
  return key['Parameter']['Value']


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = _get_ssm_key('/Dev/WebServer/TEST_PARAMETER')
SECRET_KEY = 'cmd$3jnobq9*3v#g4ah3ol$anc+0n6+v#j1_%jd+y%gm05b$1m'
DB_CONNECTION_STRING = 'mysql://HFAadmin:Nxy7QQakQfc7e6Zf3XrtY6TH@aa19qmsi1lfbnhq.csypscy0lqdt.us-east-2.rds.amazonaws.com/HFA_Prod'
# .format(_get_ssm_key('/DB_PASS3'))
if date.today().month < 3:
    BEGIN_SEASON = dt(date.today().year, 3, 1).date()
else:
    BEGIN_SEASON = dt(date.today().year-1, 3, 1).date()
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

AWS_DEFAULT_REGION = 'us-east-2'

# Amazon Web Services Configuration
if not DEBUG:
    ALLOWED_HOSTS = ['HFA-env3.eba-jmmt2mmg.us-east-2.elasticbeanstalk.com', 'HFAdvantage.site']
    AWS_STORAGE_BUCKET_NAME = 'hfadvantage-s3-bucket'
    AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID', '')
    AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', '')
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME


    STATICFILES_LOCATION = 'static'
    STATICFILES_STORAGE = 'HFA.custom_storages.StaticStorage'
    STATIC_URL = 'https://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN, STATICFILES_LOCATION)

    MEDIAFILES_LOCATION = 'media'
    DEFAULT_FILE_STORAGE = 'HFA.custom_storages.MediaStorage'
    MEDIA_URL = 'htts://{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)

else:
    ALLOWED_HOSTS = []
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, "static")

    MEDIA_URL = '/imgs/'
    MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# Application definition

INSTALLED_APPS = [
    'storages',
    'HomeFieldAdvantage.apps.HomefieldadvantageConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 'HomeFieldAdvantage',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# for login with Google
SITE_ID = 3
LOGIN_REDIRECT_URL = '/'

# Additional configuration settings
SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_LOGOUT_ON_GET= True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}
#
ROOT_URLCONF = 'HFA.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HFA.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
#
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'HFA_Prod',
        'USER': 'HFAadmin',
        'PASSWORD': 'Nxy7QQakQfc7e6Zf3XrtY6TH',
#                     '_get_ssm_key('/DB_PASS3'),
        'HOST': 'aa19qmsi1lfbnhq.csypscy0lqdt.us-east-2.rds.amazonaws.com',
        'PORT': '3306',
    }
}

# added for login with Google
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]
##

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Eastern'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'